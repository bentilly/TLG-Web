<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:widgets="view.widgets.*"
		 
		 height="300"
		 
		 >
	
	
	<fx:Script>
		<![CDATA[
			import business.dataObjects.Activity;
			
			import events.UIEvent;
			
			import view.widgets.activityTag;
			
			public var myActivities:Array;
			
			//Flags
			public var editWorkoutMode:Boolean = false; //activityGroup used by addBar and editWorkoutPopup. Need to use appropriate activityTag UI Element.

			
			public function getActivity():String{				
				for each(var a:Activity in myActivities){
					//get tag
					var tag:activityTag = a.get_addBarActivityTag();
					//check for selected
					if(tag.selected){
						return tag.activity._key;
					}
				}
				return null;
			}
			
			public function getNewActivity():String{
				if(newActivityInput.text == 'new activity' || newActivityInput.text == ''){
					return null
				}else{
					return newActivityInput.text;
				}
			}
			
			public function buildTags():void{
				tagsHGroup.removeAllElements();
				var tagCount:int = 0;
				//split tags into columns if more than 10
				var cols:int = Math.ceil(myActivities.length/10);
				for(var i:int = 0; i<cols; i++){
					//VGroup for tag column
					var vg:VGroup = new VGroup();
					vg.gap = 2;
					
					//add tags to column
					for(var j:int = 0; j<10; j++){
						//get tag from Activity
						var activity:Activity = myActivities[j] as Activity;
						var tag:activityTag;
						//check which UI Element to use
						if(editWorkoutMode){
							tag = activity.get_editWorkoutActivityTag();
						}else{
							tag = activity.get_addBarActivityTag();
						}
						//set interaction
						tag.alpha = .6;
						tag.addEventListener(MouseEvent.CLICK, tag_clickHandler);
						tag.addEventListener(MouseEvent.ROLL_OVER, tag_overHandler);
						tag.addEventListener(MouseEvent.ROLL_OUT, tag_outHandler);
						//add tag to column
						vg.addElement(tag);
						//counting
						tagCount++;
						if(tagCount == myActivities.length){
							break;
						}
					}
					//add column to screen
					tagsHGroup.addElement(vg);
				}
			}
			
			public function updateTags():void{
				buildTags();
			}
			
			public function selectActivity(activity:Activity):void{
				//get tag from Activity
				var tag:activityTag;
				if(editWorkoutMode){
					tag = activity.get_editWorkoutActivityTag();
				}else{
					tag = activity.get_addBarActivityTag();
				}
				//select it
				tag.selectMe();
			}
			
			protected function tag_clickHandler(event:MouseEvent):void
			{				
				if(event.target is activityTag){
					var tag:activityTag = event.target as activityTag;
					deselectAllTags();
					tag.selectMe();
					tag.alpha = 1;
					newActivityInput.text = "new activity";
					newActivityInput.styleName = "textFieldNewActivityBlank";
					stage.focus = null;
				}
				
			}
			protected function tag_overHandler(event:MouseEvent):void
			{				
				var tag:activityTag = event.target as activityTag;
				tag.alpha = 1;
			}
			protected function tag_outHandler(event:MouseEvent):void
			{				
				var tag:activityTag = event.target as activityTag;
				if(!tag.selected){
					tag.alpha = .6;
				}
			}
			
			private function deselectAllTags():void{
				for each(var a:Activity in myActivities){
					//get tag
					var tag:activityTag;
					if(editWorkoutMode){
						tag = a.get_editWorkoutActivityTag();
					}else{
						tag = a.get_addBarActivityTag();
					}
					//deselect
					tag.deselectMe();
					tag.alpha = .6;
				}
			}
			
			protected function newActivityInput_focusInHandler(event:FocusEvent):void
			{
				deselectAllTags();
				if(newActivityInput.text == "new activity"){
					newActivityInput.text = "";
					newActivityInput.styleName = "textFieldNewActivityContent";
				}
			}
			
			protected function newActivityInput_focusOutHandler(event:FocusEvent):void
			{
				if(newActivityInput.text == ""){
					newActivityInput.text = "new activity";
					newActivityInput.styleName = "textFieldNewActivityBlank";
				}
			}
			
			
			
			/*triggered on successful creation of the workout in DB*/
			public function workoutAdded(event:UIEvent):void{
				deselectAllTags();
				newActivityInput.text = "new activity";
				newActivityInput.styleName = "textFieldNewActivityBlank";
			}
			
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:VGroup>
		
		<s:HGroup>
			<s:Image source="@Embed(source='../../assets/angrymonkey.png')" width="50" height="50"/>
			<s:Label text="My activities" styleName="h2_white" width="150" height="50" paddingTop="6" lineHeight="100%"/>
		</s:HGroup>
		
		<s:HGroup id="tagsHGroup"/>

			
		<s:TextInput id="newActivityInput" styleName="textFieldNewActivityBlank" width="200" text="new activity"
					 focusIn="newActivityInput_focusInHandler(event)"
					 focusOut="newActivityInput_focusOutHandler(event)"
					 />
	
		
	</s:VGroup>
	
	
</s:Group>
