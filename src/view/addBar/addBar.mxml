<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 
		 width="100%"
		 
		 filters="{ds}" xmlns:addBar="view.addBar.*"
		 
		 currentState="homeState"
		 creationComplete="creationCompleteHandler(event)"
		 >
	
	<fx:Script>
		<![CDATA[
			import com.adobe.crypto.MD5;
			import com.greensock.TweenLite;
			
			import mx.events.FlexEvent;
			
			import business.dataObjects.raw.TLGGroup;
			
			import events.UIEvent;
			
			/*** IMPORTED ***/
			[Bindable] public var userName:String;
			[Bindable] public var userEmail:String;
			[Bindable] public var currentGroup:TLGGroup;
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				gravatarImage.source = 'http://www.gravatar.com/avatar/' + MD5.hash(userEmail).toString() + '?s=12';
				gravatarImage.validateNow();			
			}
			
			/*** INTERNAL ***/
			[Bindable] private var panelHeight:Number = 480;
			[Bindable] private var peek:Number = 40;
			[Bindable] private var plusDrop:Number = 15;
			private var panelOpen:Boolean = false;
			
			protected function plusButton_clickHandler(event:MouseEvent):void
			{
				if(panelOpen){
					closePanel();
					panelOpen = false;
				}else{
					openPanel();
					panelOpen = true;
				}
			}
			private function closePanel():void{
				TweenLite.to(container, .5, {y:(panelHeight*-1 + peek)});
				TweenLite.to(plusGraphic, .5, {rotation:0});
			}
			private function openPanel():void{
				TweenLite.to(container, .5, {y:0});
				TweenLite.to(plusGraphic, .5, {rotation:45});
			}
			
			protected function backButton_clickHandler(event:MouseEvent):void
			{
				var uie:UIEvent = new UIEvent(UIEvent.GO_HOME);
				dispatchEvent(uie);
				currentState = 'homeState';
			}
			
			public function goMyWorkouts(event:UIEvent):void{
				currentState = "myWorkoutsState";
				closePanel();
				panelOpen = false;
			}
			public function goGroup(event:UIEvent):void{
				currentState = "myGroupState";
				closePanel();
				panelOpen = false;
			}
			
			protected function logoutBut_clickHandler(event:MouseEvent):void
			{
				var uie:UIEvent = new UIEvent(UIEvent.LOGOUT);
				dispatchEvent(uie);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="ds" alpha=".3" distance="2" angle="90" blurX="5"/>
	</fx:Declarations>
	
	<s:states>
		<s:State name="homeState"/>
		<s:State name="myWorkoutsState"/>
		<s:State name="myGroupState"/>
	</s:states>
	
	<s:Group id="container" width="100%" height="{panelHeight}" y="{panelHeight*-1 + peek}">
		
		<!--Black bg-->
		<s:BorderContainer backgroundColor="black" borderVisible="false" width="100%" height="{peek - plusDrop + 2}" bottom="{plusDrop}">
		</s:BorderContainer>
		<!--Coloured Bg-->
		<s:BorderContainer backgroundColor="#a2c3df" borderVisible="false" width="100%" height="{panelHeight - peek - 2}" backgroundAlpha=".92">
		</s:BorderContainer>
		<!--b2d3db-->
	
		<s:BorderContainer id="plusButton" backgroundColor="black" borderVisible="false" width="40" height="40" cornerRadius="4" horizontalCenter="0" useHandCursor="true" buttonMode="true" bottom="0" click="plusButton_clickHandler(event)">
			<s:Graphic id="plusGraphic" horizontalCenter="0" verticalCenter="0">
				<s:Rect id="rect1" width="26" height="8" horizontalCenter="0" verticalCenter="0">
					<s:fill>
						<s:SolidColor color="white"/>
					</s:fill>
				</s:Rect>
				<s:Rect id="rect2" width="8" height="26" horizontalCenter="0" verticalCenter="0">
					<s:fill>
						<s:SolidColor color="white"/>
					</s:fill>
				</s:Rect>
			</s:Graphic>
		</s:BorderContainer>
		
		<s:Rect width="100" height="26" alpha=".4" bottom="{plusDrop}">
			<s:fill>
				<s:SolidColor color="green"/>
			</s:fill>
		</s:Rect>
		
		<s:Label text="TheLazyGibbon" styleName="tlgBrand" bottom="{plusDrop + 4}" left="10" click.myGroupState="backButton_clickHandler(event)" click.myWorkoutsState="backButton_clickHandler(event)"/>
		
		<s:HGroup id="breadcrumb" bottom="{plusDrop}" left="115" height="25" excludeFrom="homeState" gap="10">
			
			<!--<s:Button id="backButton" label="Home" click="backButton_clickHandler(event)" styleName="backButton"/>-->
			<s:Label text="Back" paddingTop="7" styleName="backButton" click="backButton_clickHandler(event)"/>
			<s:Line height="100%" alpha=".3"><s:stroke><s:SolidColorStroke color="white"/></s:stroke></s:Line>
			<s:Label text.myWorkoutsState="My Workouts" text.myGroupState="{currentGroup._name}" styleName="userName" paddingTop="7"/>
			
		</s:HGroup>
		
		
		
		<s:HGroup bottom="{plusDrop + 3}" right="5">
			<s:Image id="gravatarImage"/>
			<s:Label text="{userName}" styleName="userName" />
			<s:Label id="logoutBut" text="|  log out" styleName="tinyWhite" paddingTop="2" paddingRight="10" alpha=".6" 
					 rollOut="{logoutBut.alpha = .6}" rollOver="{logoutBut.alpha = 1}" click="logoutBut_clickHandler(event)"
					 />
		</s:HGroup>
		
		<addBar:addWorkout height="{panelHeight - peek}"/>
		
	</s:Group>
	
	
</s:Group>
