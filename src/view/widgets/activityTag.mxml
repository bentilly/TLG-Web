<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:fxg="assets.fxg.*"
		 
		 currentState="deselectedState"

		 rollOver="rollOverHandler(event)"
		 rollOut="rollOutHandler(event)"
		 
		 creationComplete="creationCompleteHandler(event)"
		 
		 
		 width="200"
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import business.dataObjects.Activity;
			
			import view.popups.editTagPopup;
			
			[Bindable] public var activity:Activity;

			//flags
			public var selected:Boolean = false;
			public var whiteBG:Boolean = false;
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if(whiteBG){
					setForWhiteBg();
				}
			}
			
			public function setForWhiteBg():void{
				editLineStroke.color = 0x123456;
				
			}
				
			public function selectMe():void{
				currentState = "selectedState"
				selected = true;
			}
			public function deselectMe():void{
				currentState = "deselectedState"
				selected = false;
			}
			
			protected function rollOverHandler(event:MouseEvent):void
			{
				editLine.visible = true;
				editLabel.visible = true;
			}
			
			protected function rollOutHandler(event:MouseEvent):void
			{
				editLine.visible = false;
				editLabel.visible = false;
			}
			
			protected function editLabel_clickHandler(event:MouseEvent):void
			{
				var editTagPU:editTagPopup = new editTagPopup();
				editTagPU.tag = (event.target.parent as activityTag).activity;
				editTagPU.open(FlexGlobals.topLevelApplication as DisplayObjectContainer, true);
				PopUpManager.centerPopUp(editTagPU);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:states>
		<s:State name="deselectedState"/>
		<s:State name="selectedState"/>
	</s:states>
	
	<s:Line id="editLine" width="150" right="22" top="9" alpha=".2" visible="false">
		<s:stroke>
			<s:SolidColorStroke id="editLineStroke" color="white" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<s:HGroup gap="-1" includeIn="deselectedState" mouseChildren="false" mouseEnabled="false">
		<fxg:tagHead_white/>
		<s:Label text="{activity._name}" height="18" styleName="tagWhiteText" maxWidth="150" maxDisplayedLines="1"/>
		<s:Rect width="10" height="18"
				topRightRadiusX="5" topRightRadiusY="5" bottomRightRadiusX="5" bottomRightRadiusY="5">
			<s:fill><s:SolidColor color="{activity._colour}" /></s:fill>
		</s:Rect>
	</s:HGroup>
	
	<s:HGroup gap="-1" includeIn="selectedState" mouseChildren="false" mouseEnabled="false">
		<fxg:tagHead_blue/>
		<s:Label text="{activity._name}" height="18" styleName="tagBlueText" maxWidth="150" maxDisplayedLines="1"/>
		<s:Rect width="10" height="18"
				topRightRadiusX="5" topRightRadiusY="5" bottomRightRadiusX="5" bottomRightRadiusY="5">
			<s:fill><s:SolidColor color="{activity._colour}" /></s:fill>
		</s:Rect>
	</s:HGroup>
	
	<s:Label id="editLabel" text="edit" right="0" styleName="tagEdit" top="5" visible="false" click="editLabel_clickHandler(event)"/>
	
</s:Group>
