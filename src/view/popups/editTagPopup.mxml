<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   
			   filters="{[dsFliter]}"
			   close="closeHandler(event)"
			   >
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.PopUpEvent;
			
			import business.dataObjects.raw.Activity;
			
			import events.RequestEvent;
			
			/*** IMPORTED  ***/
			public var token:String;
			
			
			
			[Bindable] public var tag:Activity;
			
			protected function closeHandler(event:PopUpEvent):void
			{
				trace('close editTagPopup');
				PopUpManager.removePopUp(this);
				
			}
			
			// GO button
			protected function goButton_rollOverHandler(event:MouseEvent):void
			{
				goButton.setStyle("color", "#7be6ff");
				
			}
			
			protected function goButton_rollOutHandler(event:MouseEvent):void
			{
				goButton.setStyle("color", "#FFFFFF");
				
			}
			
			// CANCEL button
			protected function cancelButton_rollOverHandler(event:MouseEvent):void
			{
				cancelButton.setStyle("color", "#7be6ff");
				
			}
			
			protected function cancelButton_rollOutHandler(event:MouseEvent):void
			{
				cancelButton.setStyle("color", "#FFFFFF");
				
			}
			
			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				close();
			}
			
			protected function goButton_clickHandler(event:MouseEvent):void
			{
				var re:RequestEvent = new RequestEvent(RequestEvent.TLG_API_REQUEST);
				var requestObj:Object = new Object();
				requestObj.operation = 'activity.updateActivity';
				requestObj.token = token;
				requestObj.key = tag._key;
				requestObj.name = nameInput.text;
				requestObj.colour = colourPicker.selectedColor.toString(16);
				
				re.requestJson = JSON.stringify(requestObj);
				trace("\n\n>>--------API REQUEST--------- : request = "+requestObj.operation);
				trace(re.requestJson);
				dispatchEvent(re);
				
				close();
			}
			
			public function activityUpdated(event:Event):void{
				tag._name = nameInput.text;
				tag._colour = Number('0x'+colourPicker.selectedColor.toString(16));
				close();
			}
			public function activityUpdateFail(event:Event):void{
				close();
			}
			
			protected function enterHandler(event:Event):void
			{
				goButton_clickHandler(new MouseEvent(MouseEvent.CLICK));
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dsFliter" alpha=".3"/>
	</fx:Declarations>
	
	<s:VGroup gap="0">
		<s:Group>
			<s:Label fontFamily="OS-condBold" color="white" fontSize="30" text="EDIT TAG" paddingBottom="-6" paddingLeft="2"/>
		</s:Group>
		<s:BorderContainer backgroundColor="white" borderVisible="false" cornerRadius="6">
			
			<s:HGroup paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="18" gap="10">
				<s:VGroup >
					<s:Label text="tag name:" styleName="smallLight"/>
					<s:TextInput id="nameInput" styleName="textFieldBold" width="300" text="{tag._name}" enter="enterHandler(event)"/>
				</s:VGroup>
				<s:VGroup>
					<s:Label text="colour:" styleName="smallLight"/>
					<mx:ColorPicker id="colourPicker" height="42" width="42" selectedColor="{tag._colour}"/>
				</s:VGroup>
			</s:HGroup>
			
		</s:BorderContainer>
		<s:Group width="100%">
			<s:HGroup right="0">
				<s:Label id="goButton" fontFamily="OS-condBold" color="white" fontSize="30" text="GO"
						 useHandCursor="true" buttonMode="true"
						 rollOver="goButton_rollOverHandler(event)" rollOut="goButton_rollOutHandler(event)"  click="goButton_clickHandler(event)"
						 />
			</s:HGroup>
			<s:Group left="0">
				<s:Label id="cancelButton" fontFamily="OS-condBold" color="white" fontSize="30" text="CANCEL"
						 useHandCursor="true" buttonMode="true"
						 rollOver="cancelButton_rollOverHandler(event)" rollOut="cancelButton_rollOutHandler(event)" click="cancelButton_clickHandler(event)"
						 />
			</s:Group>
			
		</s:Group>
		
	</s:VGroup>
	
	
	
</s:SkinnablePopUpContainer>
